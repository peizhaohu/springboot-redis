-- MySQL Script generated by MySQL Workbench
-- 05/22/17 13:46:55
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema kanggutang
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema kanggutang
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `kanggutang` DEFAULT CHARACTER SET utf8 ;
USE `kanggutang` ;

-- -----------------------------------------------------
-- Table `kanggutang`.`base_categories_data_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanggutang`.`base_categories_data_info` (
  `CATEGORIES_DATA_INFO_ID` INT NOT NULL AUTO_INCREMENT,
  `CATEGORIES_NAME` VARCHAR(45) NOT NULL COMMENT '大类名称',
  `CREATION_DATE` DATETIME NOT NULL,
  PRIMARY KEY (`CATEGORIES_DATA_INFO_ID`))
ENGINE = InnoDB
COMMENT = '基础信息表';


-- -----------------------------------------------------
-- Table `kanggutang`.`base_sub_categories_data_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanggutang`.`base_sub_categories_data_info` (
  `SUB_CATEGORIES_DATA_INFO_ID` INT NOT NULL AUTO_INCREMENT,
  `CATEGORIES_DATA_INFO_ID` INT NOT NULL COMMENT '基础大类id',
  `CATEGORIES_CODE` VARCHAR(45) NOT NULL COMMENT '基础小类名称',
  `CATEGORIES_VALUE` VARCHAR(45) NOT NULL COMMENT '基础小类值',
  `CREATION_DATE` DATETIME NOT NULL,
  PRIMARY KEY (`SUB_CATEGORIES_DATA_INFO_ID`))
ENGINE = InnoDB
COMMENT = '基础小类表';


-- -----------------------------------------------------
-- Table `kanggutang`.`earning`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanggutang`.`earning` (
  `EARNING_ID` INT NOT NULL AUTO_INCREMENT,
  `EARNING_TYPE` INT NOT NULL COMMENT '收入名称',
  `EARNING_NAME` VARCHAR(45) NULL COMMENT '收入名称描述',
  `EARNING_AMOUNT` DECIMAL(15,4) NOT NULL COMMENT '收入金额',
  `YEAR` INT NOT NULL COMMENT '年份',
  `MONTH` INT NOT NULL COMMENT '月份',
  `DAY` INT NOT NULL COMMENT '日',
  `REMARK` VARCHAR(255) NULL COMMENT '备注',
  `CREATION_DATE` DATETIME NOT NULL COMMENT '创建时间',
  `CREATED_BY` INT NOT NULL COMMENT '创建人',
  `LAST_UPDATE_DATE` DATETIME NOT NULL,
  `LAST_UPDATED_BY` INT NOT NULL COMMENT '最后修改人',
  PRIMARY KEY (`EARNING_ID`))
ENGINE = InnoDB
COMMENT = '收入表';


-- -----------------------------------------------------
-- Table `kanggutang`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanggutang`.`user` (
  `USER_ID` INT NOT NULL AUTO_INCREMENT,
  `USER_NAME` VARCHAR(45) NOT NULL COMMENT '用户名称',
  `LOGIN_NAME` VARCHAR(45) NOT NULL COMMENT '登陆名称',
  `PASSWORD` VARCHAR(500) NOT NULL COMMENT '密码',
  `ROLE_TYPE` INT NOT NULL COMMENT '角色类型',
  `STATUS` INT NOT NULL COMMENT '用户状态0--不可用1--可用',
  `PHONE` VARCHAR(15) NOT NULL COMMENT '联系电话',
  `CREATION_DATE` DATETIME NOT NULL COMMENT '创建时间',
  `CREATED_BY` INT NOT NULL COMMENT '创建人',
  `LAST_UPDATE_DATE` DATETIME NOT NULL COMMENT '最后更新时间',
  `LAST_UPDATED_BY` INT NOT NULL COMMENT '最后更新人',
  PRIMARY KEY (`USER_ID`),
  UNIQUE INDEX `LOGIN_NAME_UNIQUE` (`LOGIN_NAME` ASC))
ENGINE = InnoDB
COMMENT = '用户表';


-- -----------------------------------------------------
-- Table `kanggutang`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanggutang`.`role` (
  `ROLE_ID` INT NOT NULL AUTO_INCREMENT,
  `ROLE_NAME` VARCHAR(45) NOT NULL COMMENT '角色名称',
  `STATUS` INT NOT NULL COMMENT '角色状态0--不可用1--可用',
  `CREATION_DATE` DATETIME NOT NULL COMMENT '创建时间',
  `CREATED_BY` INT NOT NULL COMMENT '创建人',
  `LAST_UPDATE_DATE` DATETIME NOT NULL COMMENT '最新更新时间',
  `LAST_UPDATED_BY` INT NOT NULL COMMENT '最后更新人',
  PRIMARY KEY (`ROLE_ID`))
ENGINE = InnoDB
COMMENT = '角色表';


-- -----------------------------------------------------
-- Table `kanggutang`.`expense`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanggutang`.`expense` (
  `EXPENSE_ID` INT NOT NULL AUTO_INCREMENT,
  `EXPENSE_TYPE` INT NOT NULL COMMENT '支出名称',
  `EXPENSE_NAME` VARCHAR(45) NULL COMMENT '支出名称描述',
  `EXPENSE_AMOUNT` DECIMAL(15,4) NOT NULL COMMENT '支出金额',
  `YEAR` INT NOT NULL COMMENT '年份',
  `MONTH` INT NOT NULL COMMENT '月份',
  `DAY` INT NOT NULL COMMENT '日',
  `REMARK` VARCHAR(255) NULL COMMENT '备注',
  `CREATION_DATE` DATETIME NOT NULL COMMENT '创建时间',
  `CREATED_BY` INT NOT NULL COMMENT '创建人',
  `LAST_UPDATE_DATE` DATETIME NOT NULL COMMENT '最后更新时间',
  `LAST_UPDATED_BY` INT NOT NULL COMMENT '最后更新人',
  PRIMARY KEY (`EXPENSE_ID`))
ENGINE = InnoDB
COMMENT = '支出表';


-- -----------------------------------------------------
-- Table `kanggutang`.`earning_expense_month`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanggutang`.`earning_expense_month` (
  `EARNING_EXPENSE_MONTH_ID` INT NOT NULL AUTO_INCREMENT,
  `YEAR` INT NOT NULL COMMENT '年',
  `MONTH` INT NOT NULL COMMENT '月',
  `EARNING_MONTH` DECIMAL(18,4) NOT NULL COMMENT '每月收入',
  `EXPENSE_MONTH` DECIMAL(18,4) NOT NULL COMMENT '每月支出',
  `CREATION_DATE` DATETIME NOT NULL COMMENT '创建时间',
  `LAST_UPDATE_DATE` DATETIME NOT NULL COMMENT '最后更新时间',
  PRIMARY KEY (`EARNING_EXPENSE_MONTH_ID`))
ENGINE = InnoDB
COMMENT = '每个月的收入支出';


-- -----------------------------------------------------
-- Table `kanggutang`.`earning_expense_day`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanggutang`.`earning_expense_day` (
  `EARNING_EXPENSE_DAY_ID` INT NOT NULL AUTO_INCREMENT,
  `YEAR` INT NOT NULL COMMENT '年',
  `MONTH` INT NOT NULL COMMENT '月',
  `DAY` INT NOT NULL COMMENT '日',
  `EARNING_DAY` DECIMAL(15,4) NOT NULL COMMENT '每天收入',
  `EXPENSE_DAY` DECIMAL(15,4) NOT NULL COMMENT '每天支出',
  `CREATION_DATE` DATETIME NOT NULL COMMENT '创建时间',
  `LAST_UPDATE_DATE` DATETIME NOT NULL,
  PRIMARY KEY (`EARNING_EXPENSE_DAY_ID`))
ENGINE = InnoDB
COMMENT = '每天的收入支出';


-- -----------------------------------------------------
-- Table `kanggutang`.`permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanggutang`.`permission` (
  `PERMISSION_ID` INT NOT NULL AUTO_INCREMENT,
  `PERMISSION_NAME` VARCHAR(45) NOT NULL COMMENT '权限名称',
  `FUNCTION_NAME` VARCHAR(45) NOT NULL COMMENT '方法名称',
  `CREATION_DATE` DATETIME NOT NULL COMMENT '创建时间',
  PRIMARY KEY (`PERMISSION_ID`))
ENGINE = InnoDB
COMMENT = '授权方法表';


-- -----------------------------------------------------
-- Table `kanggutang`.`permission_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanggutang`.`permission_role` (
  `PERMISSION_ROLE_ID` INT NOT NULL AUTO_INCREMENT,
  `PERMISSION_ID` INT NOT NULL COMMENT '授权id',
  `ROLE_ID` INT NOT NULL COMMENT '角色id',
  `CREATION_DATE` DATETIME NOT NULL COMMENT '创建时间',
  PRIMARY KEY (`PERMISSION_ROLE_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kanggutang`.`earning_expense_year`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanggutang`.`earning_expense_year` (
  `EARNING_EXPENSE_YEAR_ID` INT NOT NULL AUTO_INCREMENT,
  `YEAR` INT NOT NULL COMMENT '年份',
  `EARNING_YEAR` DECIMAL(18,4) NOT NULL COMMENT '年收入',
  `EXPENSE_YEAR` DECIMAL(18,4) NOT NULL COMMENT '年支出',
  `CREATION_DATE` DATETIME NOT NULL COMMENT '创建时间',
  `LAST_UPDATE_DATE` DATETIME NOT NULL,
  PRIMARY KEY (`EARNING_EXPENSE_YEAR_ID`))
ENGINE = InnoDB
COMMENT = '每年的收入支出';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
