package com.kanggutang.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class EarningExpenseDayExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    public EarningExpenseDayExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEarningExpenseDayIdIsNull() {
            addCriterion("EARNING_EXPENSE_DAY_ID is null");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseDayIdIsNotNull() {
            addCriterion("EARNING_EXPENSE_DAY_ID is not null");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseDayIdEqualTo(Integer value) {
            addCriterion("EARNING_EXPENSE_DAY_ID =", value, "earningExpenseDayId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseDayIdNotEqualTo(Integer value) {
            addCriterion("EARNING_EXPENSE_DAY_ID <>", value, "earningExpenseDayId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseDayIdGreaterThan(Integer value) {
            addCriterion("EARNING_EXPENSE_DAY_ID >", value, "earningExpenseDayId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseDayIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("EARNING_EXPENSE_DAY_ID >=", value, "earningExpenseDayId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseDayIdLessThan(Integer value) {
            addCriterion("EARNING_EXPENSE_DAY_ID <", value, "earningExpenseDayId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseDayIdLessThanOrEqualTo(Integer value) {
            addCriterion("EARNING_EXPENSE_DAY_ID <=", value, "earningExpenseDayId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseDayIdIn(List<Integer> values) {
            addCriterion("EARNING_EXPENSE_DAY_ID in", values, "earningExpenseDayId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseDayIdNotIn(List<Integer> values) {
            addCriterion("EARNING_EXPENSE_DAY_ID not in", values, "earningExpenseDayId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseDayIdBetween(Integer value1, Integer value2) {
            addCriterion("EARNING_EXPENSE_DAY_ID between", value1, value2, "earningExpenseDayId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseDayIdNotBetween(Integer value1, Integer value2) {
            addCriterion("EARNING_EXPENSE_DAY_ID not between", value1, value2, "earningExpenseDayId");
            return (Criteria) this;
        }

        public Criteria andYearIsNull() {
            addCriterion("`YEAR` is null");
            return (Criteria) this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("`YEAR` is not null");
            return (Criteria) this;
        }

        public Criteria andYearEqualTo(Integer value) {
            addCriterion("`YEAR` =", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotEqualTo(Integer value) {
            addCriterion("`YEAR` <>", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThan(Integer value) {
            addCriterion("`YEAR` >", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThanOrEqualTo(Integer value) {
            addCriterion("`YEAR` >=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThan(Integer value) {
            addCriterion("`YEAR` <", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThanOrEqualTo(Integer value) {
            addCriterion("`YEAR` <=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearIn(List<Integer> values) {
            addCriterion("`YEAR` in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotIn(List<Integer> values) {
            addCriterion("`YEAR` not in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearBetween(Integer value1, Integer value2) {
            addCriterion("`YEAR` between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotBetween(Integer value1, Integer value2) {
            addCriterion("`YEAR` not between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andMonthIsNull() {
            addCriterion("`MONTH` is null");
            return (Criteria) this;
        }

        public Criteria andMonthIsNotNull() {
            addCriterion("`MONTH` is not null");
            return (Criteria) this;
        }

        public Criteria andMonthEqualTo(Integer value) {
            addCriterion("`MONTH` =", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthNotEqualTo(Integer value) {
            addCriterion("`MONTH` <>", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthGreaterThan(Integer value) {
            addCriterion("`MONTH` >", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthGreaterThanOrEqualTo(Integer value) {
            addCriterion("`MONTH` >=", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthLessThan(Integer value) {
            addCriterion("`MONTH` <", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthLessThanOrEqualTo(Integer value) {
            addCriterion("`MONTH` <=", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthIn(List<Integer> values) {
            addCriterion("`MONTH` in", values, "month");
            return (Criteria) this;
        }

        public Criteria andMonthNotIn(List<Integer> values) {
            addCriterion("`MONTH` not in", values, "month");
            return (Criteria) this;
        }

        public Criteria andMonthBetween(Integer value1, Integer value2) {
            addCriterion("`MONTH` between", value1, value2, "month");
            return (Criteria) this;
        }

        public Criteria andMonthNotBetween(Integer value1, Integer value2) {
            addCriterion("`MONTH` not between", value1, value2, "month");
            return (Criteria) this;
        }

        public Criteria andDayIsNull() {
            addCriterion("`DAY` is null");
            return (Criteria) this;
        }

        public Criteria andDayIsNotNull() {
            addCriterion("`DAY` is not null");
            return (Criteria) this;
        }

        public Criteria andDayEqualTo(Integer value) {
            addCriterion("`DAY` =", value, "day");
            return (Criteria) this;
        }

        public Criteria andDayNotEqualTo(Integer value) {
            addCriterion("`DAY` <>", value, "day");
            return (Criteria) this;
        }

        public Criteria andDayGreaterThan(Integer value) {
            addCriterion("`DAY` >", value, "day");
            return (Criteria) this;
        }

        public Criteria andDayGreaterThanOrEqualTo(Integer value) {
            addCriterion("`DAY` >=", value, "day");
            return (Criteria) this;
        }

        public Criteria andDayLessThan(Integer value) {
            addCriterion("`DAY` <", value, "day");
            return (Criteria) this;
        }

        public Criteria andDayLessThanOrEqualTo(Integer value) {
            addCriterion("`DAY` <=", value, "day");
            return (Criteria) this;
        }

        public Criteria andDayIn(List<Integer> values) {
            addCriterion("`DAY` in", values, "day");
            return (Criteria) this;
        }

        public Criteria andDayNotIn(List<Integer> values) {
            addCriterion("`DAY` not in", values, "day");
            return (Criteria) this;
        }

        public Criteria andDayBetween(Integer value1, Integer value2) {
            addCriterion("`DAY` between", value1, value2, "day");
            return (Criteria) this;
        }

        public Criteria andDayNotBetween(Integer value1, Integer value2) {
            addCriterion("`DAY` not between", value1, value2, "day");
            return (Criteria) this;
        }

        public Criteria andEarningDayIsNull() {
            addCriterion("EARNING_DAY is null");
            return (Criteria) this;
        }

        public Criteria andEarningDayIsNotNull() {
            addCriterion("EARNING_DAY is not null");
            return (Criteria) this;
        }

        public Criteria andEarningDayEqualTo(BigDecimal value) {
            addCriterion("EARNING_DAY =", value, "earningDay");
            return (Criteria) this;
        }

        public Criteria andEarningDayNotEqualTo(BigDecimal value) {
            addCriterion("EARNING_DAY <>", value, "earningDay");
            return (Criteria) this;
        }

        public Criteria andEarningDayGreaterThan(BigDecimal value) {
            addCriterion("EARNING_DAY >", value, "earningDay");
            return (Criteria) this;
        }

        public Criteria andEarningDayGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EARNING_DAY >=", value, "earningDay");
            return (Criteria) this;
        }

        public Criteria andEarningDayLessThan(BigDecimal value) {
            addCriterion("EARNING_DAY <", value, "earningDay");
            return (Criteria) this;
        }

        public Criteria andEarningDayLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EARNING_DAY <=", value, "earningDay");
            return (Criteria) this;
        }

        public Criteria andEarningDayIn(List<BigDecimal> values) {
            addCriterion("EARNING_DAY in", values, "earningDay");
            return (Criteria) this;
        }

        public Criteria andEarningDayNotIn(List<BigDecimal> values) {
            addCriterion("EARNING_DAY not in", values, "earningDay");
            return (Criteria) this;
        }

        public Criteria andEarningDayBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EARNING_DAY between", value1, value2, "earningDay");
            return (Criteria) this;
        }

        public Criteria andEarningDayNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EARNING_DAY not between", value1, value2, "earningDay");
            return (Criteria) this;
        }

        public Criteria andExpenseDayIsNull() {
            addCriterion("EXPENSE_DAY is null");
            return (Criteria) this;
        }

        public Criteria andExpenseDayIsNotNull() {
            addCriterion("EXPENSE_DAY is not null");
            return (Criteria) this;
        }

        public Criteria andExpenseDayEqualTo(BigDecimal value) {
            addCriterion("EXPENSE_DAY =", value, "expenseDay");
            return (Criteria) this;
        }

        public Criteria andExpenseDayNotEqualTo(BigDecimal value) {
            addCriterion("EXPENSE_DAY <>", value, "expenseDay");
            return (Criteria) this;
        }

        public Criteria andExpenseDayGreaterThan(BigDecimal value) {
            addCriterion("EXPENSE_DAY >", value, "expenseDay");
            return (Criteria) this;
        }

        public Criteria andExpenseDayGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EXPENSE_DAY >=", value, "expenseDay");
            return (Criteria) this;
        }

        public Criteria andExpenseDayLessThan(BigDecimal value) {
            addCriterion("EXPENSE_DAY <", value, "expenseDay");
            return (Criteria) this;
        }

        public Criteria andExpenseDayLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EXPENSE_DAY <=", value, "expenseDay");
            return (Criteria) this;
        }

        public Criteria andExpenseDayIn(List<BigDecimal> values) {
            addCriterion("EXPENSE_DAY in", values, "expenseDay");
            return (Criteria) this;
        }

        public Criteria andExpenseDayNotIn(List<BigDecimal> values) {
            addCriterion("EXPENSE_DAY not in", values, "expenseDay");
            return (Criteria) this;
        }

        public Criteria andExpenseDayBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXPENSE_DAY between", value1, value2, "expenseDay");
            return (Criteria) this;
        }

        public Criteria andExpenseDayNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXPENSE_DAY not between", value1, value2, "expenseDay");
            return (Criteria) this;
        }

        public Criteria andCreationDateIsNull() {
            addCriterion("CREATION_DATE is null");
            return (Criteria) this;
        }

        public Criteria andCreationDateIsNotNull() {
            addCriterion("CREATION_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andCreationDateEqualTo(Date value) {
            addCriterion("CREATION_DATE =", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotEqualTo(Date value) {
            addCriterion("CREATION_DATE <>", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateGreaterThan(Date value) {
            addCriterion("CREATION_DATE >", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATION_DATE >=", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateLessThan(Date value) {
            addCriterion("CREATION_DATE <", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateLessThanOrEqualTo(Date value) {
            addCriterion("CREATION_DATE <=", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateIn(List<Date> values) {
            addCriterion("CREATION_DATE in", values, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotIn(List<Date> values) {
            addCriterion("CREATION_DATE not in", values, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateBetween(Date value1, Date value2) {
            addCriterion("CREATION_DATE between", value1, value2, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotBetween(Date value1, Date value2) {
            addCriterion("CREATION_DATE not between", value1, value2, "creationDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNull() {
            addCriterion("LAST_UPDATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNotNull() {
            addCriterion("LAST_UPDATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE =", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <>", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThan(Date value) {
            addCriterion("LAST_UPDATE_DATE >", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE >=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThan(Date value) {
            addCriterion("LAST_UPDATE_DATE <", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE not in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE not between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table earning_expense_day
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table earning_expense_day
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}