package com.kanggutang.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class EarningExpenseYearExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    public EarningExpenseYearExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEarningExpenseYearIdIsNull() {
            addCriterion("EARNING_EXPENSE_YEAR_ID is null");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseYearIdIsNotNull() {
            addCriterion("EARNING_EXPENSE_YEAR_ID is not null");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseYearIdEqualTo(Integer value) {
            addCriterion("EARNING_EXPENSE_YEAR_ID =", value, "earningExpenseYearId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseYearIdNotEqualTo(Integer value) {
            addCriterion("EARNING_EXPENSE_YEAR_ID <>", value, "earningExpenseYearId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseYearIdGreaterThan(Integer value) {
            addCriterion("EARNING_EXPENSE_YEAR_ID >", value, "earningExpenseYearId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseYearIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("EARNING_EXPENSE_YEAR_ID >=", value, "earningExpenseYearId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseYearIdLessThan(Integer value) {
            addCriterion("EARNING_EXPENSE_YEAR_ID <", value, "earningExpenseYearId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseYearIdLessThanOrEqualTo(Integer value) {
            addCriterion("EARNING_EXPENSE_YEAR_ID <=", value, "earningExpenseYearId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseYearIdIn(List<Integer> values) {
            addCriterion("EARNING_EXPENSE_YEAR_ID in", values, "earningExpenseYearId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseYearIdNotIn(List<Integer> values) {
            addCriterion("EARNING_EXPENSE_YEAR_ID not in", values, "earningExpenseYearId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseYearIdBetween(Integer value1, Integer value2) {
            addCriterion("EARNING_EXPENSE_YEAR_ID between", value1, value2, "earningExpenseYearId");
            return (Criteria) this;
        }

        public Criteria andEarningExpenseYearIdNotBetween(Integer value1, Integer value2) {
            addCriterion("EARNING_EXPENSE_YEAR_ID not between", value1, value2, "earningExpenseYearId");
            return (Criteria) this;
        }

        public Criteria andYearIsNull() {
            addCriterion("`YEAR` is null");
            return (Criteria) this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("`YEAR` is not null");
            return (Criteria) this;
        }

        public Criteria andYearEqualTo(Integer value) {
            addCriterion("`YEAR` =", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotEqualTo(Integer value) {
            addCriterion("`YEAR` <>", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThan(Integer value) {
            addCriterion("`YEAR` >", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThanOrEqualTo(Integer value) {
            addCriterion("`YEAR` >=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThan(Integer value) {
            addCriterion("`YEAR` <", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThanOrEqualTo(Integer value) {
            addCriterion("`YEAR` <=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearIn(List<Integer> values) {
            addCriterion("`YEAR` in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotIn(List<Integer> values) {
            addCriterion("`YEAR` not in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearBetween(Integer value1, Integer value2) {
            addCriterion("`YEAR` between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotBetween(Integer value1, Integer value2) {
            addCriterion("`YEAR` not between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andEarningYearIsNull() {
            addCriterion("EARNING_YEAR is null");
            return (Criteria) this;
        }

        public Criteria andEarningYearIsNotNull() {
            addCriterion("EARNING_YEAR is not null");
            return (Criteria) this;
        }

        public Criteria andEarningYearEqualTo(BigDecimal value) {
            addCriterion("EARNING_YEAR =", value, "earningYear");
            return (Criteria) this;
        }

        public Criteria andEarningYearNotEqualTo(BigDecimal value) {
            addCriterion("EARNING_YEAR <>", value, "earningYear");
            return (Criteria) this;
        }

        public Criteria andEarningYearGreaterThan(BigDecimal value) {
            addCriterion("EARNING_YEAR >", value, "earningYear");
            return (Criteria) this;
        }

        public Criteria andEarningYearGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EARNING_YEAR >=", value, "earningYear");
            return (Criteria) this;
        }

        public Criteria andEarningYearLessThan(BigDecimal value) {
            addCriterion("EARNING_YEAR <", value, "earningYear");
            return (Criteria) this;
        }

        public Criteria andEarningYearLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EARNING_YEAR <=", value, "earningYear");
            return (Criteria) this;
        }

        public Criteria andEarningYearIn(List<BigDecimal> values) {
            addCriterion("EARNING_YEAR in", values, "earningYear");
            return (Criteria) this;
        }

        public Criteria andEarningYearNotIn(List<BigDecimal> values) {
            addCriterion("EARNING_YEAR not in", values, "earningYear");
            return (Criteria) this;
        }

        public Criteria andEarningYearBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EARNING_YEAR between", value1, value2, "earningYear");
            return (Criteria) this;
        }

        public Criteria andEarningYearNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EARNING_YEAR not between", value1, value2, "earningYear");
            return (Criteria) this;
        }

        public Criteria andExpenseYearIsNull() {
            addCriterion("EXPENSE_YEAR is null");
            return (Criteria) this;
        }

        public Criteria andExpenseYearIsNotNull() {
            addCriterion("EXPENSE_YEAR is not null");
            return (Criteria) this;
        }

        public Criteria andExpenseYearEqualTo(BigDecimal value) {
            addCriterion("EXPENSE_YEAR =", value, "expenseYear");
            return (Criteria) this;
        }

        public Criteria andExpenseYearNotEqualTo(BigDecimal value) {
            addCriterion("EXPENSE_YEAR <>", value, "expenseYear");
            return (Criteria) this;
        }

        public Criteria andExpenseYearGreaterThan(BigDecimal value) {
            addCriterion("EXPENSE_YEAR >", value, "expenseYear");
            return (Criteria) this;
        }

        public Criteria andExpenseYearGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EXPENSE_YEAR >=", value, "expenseYear");
            return (Criteria) this;
        }

        public Criteria andExpenseYearLessThan(BigDecimal value) {
            addCriterion("EXPENSE_YEAR <", value, "expenseYear");
            return (Criteria) this;
        }

        public Criteria andExpenseYearLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EXPENSE_YEAR <=", value, "expenseYear");
            return (Criteria) this;
        }

        public Criteria andExpenseYearIn(List<BigDecimal> values) {
            addCriterion("EXPENSE_YEAR in", values, "expenseYear");
            return (Criteria) this;
        }

        public Criteria andExpenseYearNotIn(List<BigDecimal> values) {
            addCriterion("EXPENSE_YEAR not in", values, "expenseYear");
            return (Criteria) this;
        }

        public Criteria andExpenseYearBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXPENSE_YEAR between", value1, value2, "expenseYear");
            return (Criteria) this;
        }

        public Criteria andExpenseYearNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXPENSE_YEAR not between", value1, value2, "expenseYear");
            return (Criteria) this;
        }

        public Criteria andCreationDateIsNull() {
            addCriterion("CREATION_DATE is null");
            return (Criteria) this;
        }

        public Criteria andCreationDateIsNotNull() {
            addCriterion("CREATION_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andCreationDateEqualTo(Date value) {
            addCriterion("CREATION_DATE =", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotEqualTo(Date value) {
            addCriterion("CREATION_DATE <>", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateGreaterThan(Date value) {
            addCriterion("CREATION_DATE >", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATION_DATE >=", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateLessThan(Date value) {
            addCriterion("CREATION_DATE <", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateLessThanOrEqualTo(Date value) {
            addCriterion("CREATION_DATE <=", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateIn(List<Date> values) {
            addCriterion("CREATION_DATE in", values, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotIn(List<Date> values) {
            addCriterion("CREATION_DATE not in", values, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateBetween(Date value1, Date value2) {
            addCriterion("CREATION_DATE between", value1, value2, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotBetween(Date value1, Date value2) {
            addCriterion("CREATION_DATE not between", value1, value2, "creationDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNull() {
            addCriterion("LAST_UPDATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNotNull() {
            addCriterion("LAST_UPDATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE =", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <>", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThan(Date value) {
            addCriterion("LAST_UPDATE_DATE >", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE >=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThan(Date value) {
            addCriterion("LAST_UPDATE_DATE <", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE not in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE not between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table earning_expense_year
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table earning_expense_year
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}