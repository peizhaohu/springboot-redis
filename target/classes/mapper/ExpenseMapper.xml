<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kanggutang.dao.ExpenseMapper">
  <resultMap id="BaseResultMap" type="com.kanggutang.model.Expense">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="EXPENSE_ID" jdbcType="INTEGER" property="expenseId" />
    <result column="EXPENSE_TYPE" jdbcType="INTEGER" property="expenseType" />
    <result column="EXPENSE_NAME" jdbcType="VARCHAR" property="expenseName" />
    <result column="EXPENSE_AMOUNT" jdbcType="DECIMAL" property="expenseAmount" />
    <result column="YEAR" jdbcType="INTEGER" property="year" />
    <result column="MONTH" jdbcType="INTEGER" property="month" />
    <result column="DAY" jdbcType="INTEGER" property="day" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="CREATION_DATE" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="CREATED_BY" jdbcType="INTEGER" property="createdBy" />
    <result column="LAST_UPDATE_DATE" jdbcType="TIMESTAMP" property="lastUpdateDate" />
    <result column="LAST_UPDATED_BY" jdbcType="INTEGER" property="lastUpdatedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    EXPENSE_ID, EXPENSE_TYPE, EXPENSE_NAME, EXPENSE_AMOUNT, `YEAR`, `MONTH`, `DAY`, REMARK, 
    CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
  </sql>
  <select id="selectByExample" parameterType="com.kanggutang.model.ExpenseExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from expense
    where EXPENSE_ID = #{expenseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from expense
    where EXPENSE_ID = #{expenseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kanggutang.model.ExpenseExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kanggutang.model.Expense">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into expense (EXPENSE_ID, EXPENSE_TYPE, EXPENSE_NAME, 
      EXPENSE_AMOUNT, `YEAR`, `MONTH`, 
      `DAY`, REMARK, CREATION_DATE, 
      CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      )
    values (#{expenseId,jdbcType=INTEGER}, #{expenseType,jdbcType=INTEGER}, #{expenseName,jdbcType=VARCHAR}, 
      #{expenseAmount,jdbcType=DECIMAL}, #{year,jdbcType=INTEGER}, #{month,jdbcType=INTEGER}, 
      #{day,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=INTEGER}, #{lastUpdateDate,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kanggutang.model.Expense">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into expense
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="expenseId != null">
        EXPENSE_ID,
      </if>
      <if test="expenseType != null">
        EXPENSE_TYPE,
      </if>
      <if test="expenseName != null">
        EXPENSE_NAME,
      </if>
      <if test="expenseAmount != null">
        EXPENSE_AMOUNT,
      </if>
      <if test="year != null">
        `YEAR`,
      </if>
      <if test="month != null">
        `MONTH`,
      </if>
      <if test="day != null">
        `DAY`,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="creationDate != null">
        CREATION_DATE,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="lastUpdateDate != null">
        LAST_UPDATE_DATE,
      </if>
      <if test="lastUpdatedBy != null">
        LAST_UPDATED_BY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="expenseId != null">
        #{expenseId,jdbcType=INTEGER},
      </if>
      <if test="expenseType != null">
        #{expenseType,jdbcType=INTEGER},
      </if>
      <if test="expenseName != null">
        #{expenseName,jdbcType=VARCHAR},
      </if>
      <if test="expenseAmount != null">
        #{expenseAmount,jdbcType=DECIMAL},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null">
        #{month,jdbcType=INTEGER},
      </if>
      <if test="day != null">
        #{day,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateDate != null">
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        #{lastUpdatedBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kanggutang.model.ExpenseExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update expense
    <set>
      <if test="record.expenseId != null">
        EXPENSE_ID = #{record.expenseId,jdbcType=INTEGER},
      </if>
      <if test="record.expenseType != null">
        EXPENSE_TYPE = #{record.expenseType,jdbcType=INTEGER},
      </if>
      <if test="record.expenseName != null">
        EXPENSE_NAME = #{record.expenseName,jdbcType=VARCHAR},
      </if>
      <if test="record.expenseAmount != null">
        EXPENSE_AMOUNT = #{record.expenseAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.year != null">
        `YEAR` = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.month != null">
        `MONTH` = #{record.month,jdbcType=INTEGER},
      </if>
      <if test="record.day != null">
        `DAY` = #{record.day,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creationDate != null">
        CREATION_DATE = #{record.creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        CREATED_BY = #{record.createdBy,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdateDate != null">
        LAST_UPDATE_DATE = #{record.lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdatedBy != null">
        LAST_UPDATED_BY = #{record.lastUpdatedBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update expense
    set EXPENSE_ID = #{record.expenseId,jdbcType=INTEGER},
      EXPENSE_TYPE = #{record.expenseType,jdbcType=INTEGER},
      EXPENSE_NAME = #{record.expenseName,jdbcType=VARCHAR},
      EXPENSE_AMOUNT = #{record.expenseAmount,jdbcType=DECIMAL},
      `YEAR` = #{record.year,jdbcType=INTEGER},
      `MONTH` = #{record.month,jdbcType=INTEGER},
      `DAY` = #{record.day,jdbcType=INTEGER},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      CREATION_DATE = #{record.creationDate,jdbcType=TIMESTAMP},
      CREATED_BY = #{record.createdBy,jdbcType=INTEGER},
      LAST_UPDATE_DATE = #{record.lastUpdateDate,jdbcType=TIMESTAMP},
      LAST_UPDATED_BY = #{record.lastUpdatedBy,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kanggutang.model.Expense">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update expense
    <set>
      <if test="expenseType != null">
        EXPENSE_TYPE = #{expenseType,jdbcType=INTEGER},
      </if>
      <if test="expenseName != null">
        EXPENSE_NAME = #{expenseName,jdbcType=VARCHAR},
      </if>
      <if test="expenseAmount != null">
        EXPENSE_AMOUNT = #{expenseAmount,jdbcType=DECIMAL},
      </if>
      <if test="year != null">
        `YEAR` = #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null">
        `MONTH` = #{month,jdbcType=INTEGER},
      </if>
      <if test="day != null">
        `DAY` = #{day,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null">
        CREATION_DATE = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        CREATED_BY = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateDate != null">
        LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        LAST_UPDATED_BY = #{lastUpdatedBy,jdbcType=INTEGER},
      </if>
    </set>
    where EXPENSE_ID = #{expenseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kanggutang.model.Expense">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update expense
    set EXPENSE_TYPE = #{expenseType,jdbcType=INTEGER},
      EXPENSE_NAME = #{expenseName,jdbcType=VARCHAR},
      EXPENSE_AMOUNT = #{expenseAmount,jdbcType=DECIMAL},
      `YEAR` = #{year,jdbcType=INTEGER},
      `MONTH` = #{month,jdbcType=INTEGER},
      `DAY` = #{day,jdbcType=INTEGER},
      REMARK = #{remark,jdbcType=VARCHAR},
      CREATION_DATE = #{creationDate,jdbcType=TIMESTAMP},
      CREATED_BY = #{createdBy,jdbcType=INTEGER},
      LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=TIMESTAMP},
      LAST_UPDATED_BY = #{lastUpdatedBy,jdbcType=INTEGER}
    where EXPENSE_ID = #{expenseId,jdbcType=INTEGER}
  </update>
</mapper>